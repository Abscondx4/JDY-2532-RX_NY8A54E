
                    Nyquest Technology Co., Ltd.

NYASM 2.50

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_TeleCon_Signal_Process
                                    1-   15     	extern	_TeleCon_Data_Recv
                                    1-   16     	extern	_LED
                                    1-   17     	extern	_Key_Scan
                                    1-   18     	extern	_Motor_PWM_Loop2
                                    1-   19     	extern	_Motor_PWM_Loop1
                                    1-   20     	extern	_M1_Reset
                                    1-   21     	extern	_M1_Work
                                    1-   22     	extern	_M1_Work_Processs
                                    1-   23     	extern	_Clock
                                    1-   24     	extern	_Charge_Process
                                    1-   25     	extern	_Charge_Detect
                                    1-   26     	extern	_Low_Voltage_Process
                                    1-   27     	extern	_Battery_Full_Process
                                    1-   28     	extern	_Battery_Voltage_Detect
                                    1-   29     	extern	_StandBy_Exit
                                    1-   30     	extern	_StandBy_Check
                                    1-   31     	extern	_StandBy_Mode
                                    1-   32     	extern	_Power_Off
                                    1-   33     	extern	_Init
                                    1-   34     	extern	_clear_ram
                                    1-   35     	extern	_multi_16b
                                    1-   36     	extern	_multi_8b
                                    1-   37     	extern	_T0MD
                                    1-   38     	extern	_PCON1
                                    1-   39     	extern	_CMPCR
                                    1-   40     	extern	_BODCON
                                    1-   41     	extern	_PS0CV
                                    1-   42     	extern	_APHCON
                                    1-   43     	extern	_IOSTB
                                    1-   44     	extern	_IOSTA
                                    1-   45     	extern	_PWM5RH
                                    1-   46     	extern	_PWM5DUTY
                                    1-   47     	extern	_P5CR1
                                    1-   48     	extern	_PWM4DUTY
                                    1-   49     	extern	_P4CR1
                                    1-   50     	extern	_PS3CV
                                    1-   51     	extern	_PWM3DUTY
                                    1-   52     	extern	_T3CR2
                                    1-   53     	extern	_T3CR1
                                    1-   54     	extern	_TMR3
                                    1-   55     	extern	_OSCCR
                                    1-   56     	extern	_PWM2DUTY
                                    1-   57     	extern	_P2CR1
                                    1-   58     	extern	_TBHD
                                    1-   59     	extern	_TBHP
                                    1-   60     	extern	_IRCR
                                    1-   61     	extern	_BZ1CR
                                    1-   62     	extern	_PS1CV
                                    1-   63     	extern	_PWM1DUTY
                                    1-   64     	extern	_T1CR2
                                    1-   65     	extern	_T1CR1
                                    1-   66     	extern	_TMR1
                                    1-   67     	extern	_TM34RH
                                    1-   68     	extern	_TMRH
                                    1-   69     	extern	_PCHBUF
                                    1-   70     	extern	_STATUS
                                    1-   71     	extern	_PCL
                                    1-   72     	extern	_TMR0
                                    1-   73     	extern	_StandBy_ShutDown_Cnt
                                    1-   74     	extern	_Low_Voltage_LED_Flash_Cnt
                                    1-   75     	extern	_Low_Voltage_Cnt
                                    1-   76     	extern	_Low_Voltage_Debounce_Cnt
                                    1-   77     	extern	_TeleCon_LED_Flash_Cnt
                                    1-   78     	extern	_TeleCon_Signal_Recv_Time_Cnt
                                    1-   79     	extern	_TeleCon_Strength_change_Code
                                    1-   80     	extern	_TeleCon_Data_Code
                                    1-   81     	extern	_TeleCon_Check_Code
                                    1-   82     	extern	_Analyze_Save3
                                    1-   83     	extern	_Analyze_Save2
                                    1-   84     	extern	_Analyze_Save1
                                    1-   85     	extern	_TeleCon_Signal_Sbit_Cnt
                                    1-   86     	extern	_TeleCon_Signal_Cnt
                                    1-   87     	extern	_TeleCon_Signal_Save
                                    1-   88     	extern	_Charge_3H_Time_Cnt
                                    1-   89     	extern	_Low_Voltage_LED_Flash_Times_Cnt
                                    1-   90     	extern	_Full_Cnt
                                    1-   91     	extern	_Charge_Cnt
                                    1-   92     	extern	_Charging_LED_Flashing_Time
                                    1-   93     	extern	_M1_Cnt
                                    1-   94     	extern	_Motor_Freq_Cnt2
                                    1-   95     	extern	_Motor_Freq_Cnt1
                                    1-   96     	extern	_Motor_Freq_Cnt0
                                    1-   97     	extern	_M1_Freq_Change_Set
                                    1-   98     	extern	_M1_Freq_Change
                                    1-   99     	extern	_M1_1_Cycle_Set
                                    1-  100     	extern	_M1_1_Duty_Set
                                    1-  101     	extern	_M1_Duty
                                    1-  102     	extern	_M1_Cycle
                                    1-  103     	extern	_Motor_Freq_Change
                                    1-  104     	extern	_M1_Duty_Set
                                    1-  105     	extern	_M1_Cycle_Set
                                    1-  106     	extern	_Key_Quick_Press_LED_Cnt
                                    1-  107     	extern	_Key_Long_Cnt
                                    1-  108     	extern	_Key_Press_Cnt
                                    1-  109     	extern	_Clock_Save
                                    1-  110     	extern	_Sleep_Cnt
                                    1-  111     	extern	_T_1MIN
                                    1-  112     	extern	_T_1S
                                    1-  113     	extern	_T_100MS
                                    1-  114     	extern	_T_10MS
                                    1-  115     	extern	_T_1MS
                                    1-  116     	extern	_T_100US
                                    1-  117     	extern	_Time
                                    1-  118     	extern	_INTE2bits
                                    1-  119     	extern	_RFCbits
                                    1-  120     	extern	_INTEDGbits
                                    1-  121     	extern	_AWUCONbits
                                    1-  122     	extern	_INTFbits
                                    1-  123     	extern	_INTEbits
                                    1-  124     	extern	_BPHCONbits
                                    1-  125     	extern	_ABPLCONbits
                                    1-  126     	extern	_BWUCONbits
                                    1-  127     	extern	_PCONbits
                                    1-  128     	extern	_PORTBbits
                                    1-  129     	extern	_PORTAbits
                                    1-  130     	extern	__nyc_ny8_startup
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ; global declarations
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     	extern	_main
                                    1-  135     	extern	_isr
                                    1-  136     	extern	_Sys_Flag3
                                    1-  137     	extern	_Sys_Flag2
                                    1-  138     	extern	_Sys_Flag1
                                    1-  139     	extern	_Sys_Flag4
                                    1-  140     	extern	_Sys_Flag0
                                    1-  141     	extern	_INTE2
                                    1-  142     	extern	_RFC
                                    1-  143     	extern	_INTEDG
                                    1-  144     	extern	_AWUCON
                                    1-  145     	extern	_INTF
                                    1-  146     	extern	_INTE
                                    1-  147     	extern	_BPHCON
                                    1-  148     	extern	_ABPLCON
                                    1-  149     	extern	_BWUCON
                                    1-  150     	extern	_PCON
                                    1-  151     	extern	_PORTB
                                    1-  152     	extern	_PORTA
                                    1-  154     	extern PSAVE
                                    1-  155     	extern SSAVE
                                    1-  156     	extern WSAVE
                                    1-  157     	extern STK12
                                    1-  158     	extern ___STK12
                                    1-  159     	extern STK11
                                    1-  160     	extern ___STK11
                                    1-  161     	extern STK10
                                    1-  162     	extern ___STK10
                                    1-  163     	extern STK09
                                    1-  164     	extern ___STK09
                                    1-  165     	extern STK08
                                    1-  166     	extern ___STK08
                                    1-  167     	extern STK07
                                    1-  168     	extern ___STK07
                                    1-  169     	extern STK06
                                    1-  170     	extern ___STK06
                                    1-  171     	extern STK05
                                    1-  172     	extern ___STK05
                                    1-  173     	extern STK04
                                    1-  174     	extern ___STK04
                                    1-  175     	extern STK03
                                    1-  176     	extern ___STK03
                                    1-  177     	extern STK02
                                    1-  178     	extern ___STK02
                                    1-  179     	extern STK01
                                    1-  180     	extern ___STK01
                                    1-  181     	extern STK00
                                    1-  182     	extern ___STK00
                                    1-  184     .segment "share_bank"
     0000                           1-  185     PSAVE:
                                    1-  186     	.res 1
                                    1-  187     .segment "share_bank"
     0000                           1-  188     SSAVE:
                                    1-  189     	.res 1
                                    1-  190     .segment "share_bank"
     0000                           1-  191     WSAVE:
                                    1-  192     	.res 1
                                    1-  193     .segment "share_bank"
     0000                           1-  194     ___STK12:
     0000                           1-  195     STK12:
                                    1-  196     	.res 1
                                    1-  197     .segment "share_bank"
     0000                           1-  198     ___STK11:
     0000                           1-  199     STK11:
                                    1-  200     	.res 1
                                    1-  201     .segment "share_bank"
     0000                           1-  202     ___STK10:
     0000                           1-  203     STK10:
                                    1-  204     	.res 1
                                    1-  205     .segment "share_bank"
     0000                           1-  206     ___STK09:
     0000                           1-  207     STK09:
                                    1-  208     	.res 1
                                    1-  209     .segment "share_bank"
     0000                           1-  210     ___STK08:
     0000                           1-  211     STK08:
                                    1-  212     	.res 1
                                    1-  213     .segment "share_bank"
     0000                           1-  214     ___STK07:
     0000                           1-  215     STK07:
                                    1-  216     	.res 1
                                    1-  217     .segment "share_bank"
     0000                           1-  218     ___STK06:
     0000                           1-  219     STK06:
                                    1-  220     	.res 1
                                    1-  221     .segment "share_bank"
     0000                           1-  222     ___STK05:
     0000                           1-  223     STK05:
                                    1-  224     	.res 1
                                    1-  225     .segment "share_bank"
     0000                           1-  226     ___STK04:
     0000                           1-  227     STK04:
                                    1-  228     	.res 1
                                    1-  229     .segment "share_bank"
     0000                           1-  230     ___STK03:
     0000                           1-  231     STK03:
                                    1-  232     	.res 1
                                    1-  233     .segment "share_bank"
     0000                           1-  234     ___STK02:
     0000                           1-  235     STK02:
                                    1-  236     	.res 1
                                    1-  237     .segment "share_bank"
     0000                           1-  238     ___STK01:
     0000                           1-  239     STK01:
                                    1-  240     	.res 1
                                    1-  241     .segment "share_bank"
     0000                           1-  242     ___STK00:
     0000                           1-  243     STK00:
                                    1-  244     	.res 1
                                    1-  246     ;--------------------------------------------------------
                                    1-  247     ; global definitions
                                    1-  248     ;--------------------------------------------------------
                                    1-  249     ;--------------------------------------------------------
                                    1-  250     ; absolute symbol definitions
                                    1-  251     ;--------------------------------------------------------
                                    1-  252     ;--------------------------------------------------------
                                    1-  253     ; compiler-defined variables
                                    1-  254     ;--------------------------------------------------------
                                    1-  255     .segment "uninit"
     0000                           1-  256     ___sdcc_saved_fsr:
                                    1-  257     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     ___sdcc_saved_stk00:
                                    1-  261     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     ___sdcc_saved_stk01:
                                    1-  265     	.res	1
                                    1-  267     ;--------------------------------------------------------
                                    1-  268     ; initialized data
                                    1-  269     ;--------------------------------------------------------
                                    1-  270     ;--------------------------------------------------------
                                    1-  271     ; initialized absolute data
                                    1-  272     ;--------------------------------------------------------
                                    1-  273     ;--------------------------------------------------------
                                    1-  274     ; overlayable items in internal ram 
                                    1-  275     ;--------------------------------------------------------
                                    1-  276     ;	udata_ovr
                                    1-  277     ;--------------------------------------------------------
                                    1-  278     ; reset vector 
                                    1-  279     ;--------------------------------------------------------
                                    1-  280     ORG	0x0000
     0000 3rrr                      1-  281     	LGOTO	__nyc_ny8_startup
                                    1-  282     ;--------------------------------------------------------
                                    1-  283     ; interrupt and initialization code
                                    1-  284     ;--------------------------------------------------------
                                    1-  285     ORG 0x0008
                                    1-  286     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  288     .segment "code"
     0000                           1-  289     __sdcc_interrupt:
                                    1-  290     ;***
                                    1-  291     ;  pBlock Stats: dbName = I
                                    1-  292     ;***
                                    1-  293     ;functions called:
                                    1-  294     ;   _Clock
                                    1-  295     ;   _M1_Work_Processs
                                    1-  296     ;   _TeleCon_Data_Recv
                                    1-  297     ;   _Clock
                                    1-  298     ;   _M1_Work_Processs
                                    1-  299     ;   _TeleCon_Data_Recv
                                    1-  300     ;2 compiler assigned registers:
                                    1-  301     ;   STK00
                                    1-  302     ;   STK01
                                    1-  303     ;; Starting pCode block
     0000                           1-  304     _isr:
                                    1-  305     ; 0 exit points
                                    1-  306     	.line	4, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  307     	MOVAR	WSAVE
     0001 1503                      1-  308     	SWAPR	STATUS,W
     0002 0283                      1-  309     	CLRR	STATUS
     0003 00rr                      1-  310     	MOVAR	SSAVE
     0004 010A                      1-  311     	MOVR	PCHBUF,W
     0005 028A                      1-  312     	CLRR	PCHBUF
     0006 00rr                      1-  313     	MOVAR	PSAVE
     0007 0104                      1-  314     	MOVR	FSR,W
                                    1-  315     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 00rr                      1-  316     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  317     	MOVR	STK00,W
                                    1-  318     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 00rr                      1-  319     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  320     	MOVR	STK01,W
                                    1-  321     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 00rr                      1-  322     	MOVAR	___sdcc_saved_stk01
                                    1-  323     	.line	6, "main.c"; 	if (T1IF)
                                    1-  324     	BANKSEL	_INTF
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 09rr                      1-  325     	BTRSS	_INTF,3
                                    1-  326     	MGOTO	_02010_DS_
     0012 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  327     	.line	8, "main.c"; 	T1IF = 0;
     0013 21F7                      1-  328     	MOVIA	0xf7
     0014 00rr                      1-  329     	MOVAR	_INTF
                                    1-  330     	.line	9, "main.c"; 	Time++;
                                    1-  331     	BANKSEL	_Time
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 05rr                      1-  332     	INCR	_Time,F
                                    1-  333     	.line	10, "main.c"; 	Clock();
                                    1-  334     	MCALL	_Clock
     0017 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  335     	.line	11, "main.c"; 	M1_Work_Processs();
                                    1-  336     	MCALL	_M1_Work_Processs
     0018 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  337     	.line	12, "main.c"; 	TeleCon_Data_Recv();
                                    1-  338     	MCALL	_TeleCon_Data_Recv
     0019 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  339     	.line	13, "main.c"; 	if (Power_Onoff_FLAG || Charging_FLAG)
                                    1-  340     	BANKSEL	_Sys_Flag0
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 0Crr                      1-  341     	BTRSC	_Sys_Flag0,0
                                    1-  342     	MGOTO	_02005_DS_
     001C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  343     	BANKSEL	_Sys_Flag1
     001D rrrr                      3-  109 m1      .banksel ram_address
     001E 0Brr                      1-  344     	BTRSS	_Sys_Flag1,6
                                    1-  345     	MGOTO	_02010_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
     0020                           1-  346     _02005_DS_:
                                    1-  347     	.line	15, "main.c"; 	Sleep_Cnt = 0;
                                    1-  348     	BANKSEL	_Sleep_Cnt
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 02rr                      1-  349     	CLRR	_Sleep_Cnt
     0022 02rr                      1-  350     	CLRR	(_Sleep_Cnt + 1)
     0023                           1-  351     _02010_DS_:
                                    1-  352     	.line	18, "main.c"; 	}
                                    1-  353     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 01rr                      1-  354     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  355     	MOVAR	STK01
                                    1-  356     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 01rr                      1-  357     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  358     	MOVAR	STK00
                                    1-  359     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 01rr                      1-  360     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  361     	MOVAR	FSR
     002C 01rr                      1-  362     	MOVR	PSAVE,W
     002D 008A                      1-  363     	MOVAR	PCHBUF
     002E 0283                      1-  364     	CLRR	STATUS
     002F 15rr                      1-  365     	SWAPR	SSAVE,W
     0030 0083                      1-  366     	MOVAR	STATUS
     0031 15rr                      1-  367     	SWAPR	WSAVE,F
     0032 15rr                      1-  368     	SWAPR	WSAVE,W
     0033                           1-  369     END_OF_INTERRUPT:
     0033 0011                      1-  370     	RETIE	
                                    1-  372     ;--------------------------------------------------------
                                    1-  373     ; code
                                    1-  374     ;--------------------------------------------------------
                                    1-  375     ; code_main	code
                                    1-  376     ;***
                                    1-  377     ;  pBlock Stats: dbName = M
                                    1-  378     ;***
                                    1-  379     ;has an exit
                                    1-  380     ;functions called:
                                    1-  381     ;   _Init
                                    1-  382     ;   _Charge_Detect
                                    1-  383     ;   _Charge_Process
                                    1-  384     ;   _Battery_Voltage_Detect
                                    1-  385     ;   _Battery_Voltage_Detect
                                    1-  386     ;   _TeleCon_Signal_Process
                                    1-  387     ;   _Key_Scan
                                    1-  388     ;   _M1_Work
                                    1-  389     ;   _LED
                                    1-  390     ;   _Init
                                    1-  391     ;   _Charge_Detect
                                    1-  392     ;   _Charge_Process
                                    1-  393     ;   _Battery_Voltage_Detect
                                    1-  394     ;   _Battery_Voltage_Detect
                                    1-  395     ;   _TeleCon_Signal_Process
                                    1-  396     ;   _Key_Scan
                                    1-  397     ;   _M1_Work
                                    1-  398     ;   _LED
                                    1-  399     ;; Starting pCode block
                                    1-  400     .segment "code"; module=main, function=_main
     0000                           1-  402     _main:
                                    1-  403     ; 2 exit points
                                    1-  404     	.line	22, "main.c"; 	Init();
                                    1-  405     	MCALL	_Init
     0000 2rrr                      3-   65 m1      LCALL rom_address
     0001                           1-  406     _02024_DS_:
                                    1-  407     	.line	25, "main.c"; 	CLRWDT();
     0001 0002                      1-  408     	clrwdt
                                    1-  409     	.line	26, "main.c"; 	Charge_Detect();
                                    1-  410     	MCALL	_Charge_Detect
     0002 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  411     	.line	27, "main.c"; 	if (Charging_FLAG)
                                    1-  412     	BANKSEL	_Sys_Flag1
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 0Brr                      1-  413     	BTRSS	_Sys_Flag1,6
                                    1-  414     	MGOTO	_02021_DS_
     0005 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  415     	.line	29, "main.c"; 	Charge_Process();
                                    1-  416     	MCALL	_Charge_Process
     0006 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  417     	.line	30, "main.c"; 	Battery_Voltage_Detect();
                                    1-  418     	MCALL	_Battery_Voltage_Detect
     0007 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  419     	MGOTO	_02022_DS_
     0008 3rrr                      3-   62 m1      LGOTO rom_address
     0009                           1-  420     _02021_DS_:
                                    1-  421     	.line	34, "main.c"; 	Battery_Voltage_Detect();
                                    1-  422     	MCALL	_Battery_Voltage_Detect
     0009 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  423     	.line	35, "main.c"; 	TeleCon_Signal_Process();
                                    1-  424     	MCALL	_TeleCon_Signal_Process
     000A 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  425     	.line	36, "main.c"; 	Key_Scan();
                                    1-  426     	MCALL	_Key_Scan
     000B 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  427     	.line	37, "main.c"; 	M1_Work();
                                    1-  428     	MCALL	_M1_Work
     000C 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  429     ;;signed compare: left < lit(0xDC=220), size=2, mask=ffff
                                    1-  430     	.line	38, "main.c"; 	if (Sleep_Cnt >= 220)
                                    1-  431     	BANKSEL	_Sleep_Cnt
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 01rr                      1-  432     	MOVR	(_Sleep_Cnt + 1),W
     000F 2580                      1-  433     	ADDIA	0x80
     0010 2580                      1-  434     	ADDIA	0x80
     0011 0903                      1-  435     	BTRSS	STATUS,2
                                    1-  436     	MGOTO	_02048_DS_
     0012 3rrr                      3-   62 m1      LGOTO rom_address
     0013 21DC                      1-  437     	MOVIA	0xdc
     0014 04rr                      1-  438     	SUBAR	_Sleep_Cnt,W
     0015                           1-  439     _02048_DS_:
     0015 0803                      1-  440     	BTRSS	STATUS,0
                                    1-  441     	MGOTO	_02022_DS_
     0016 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  442     	.line	40, "main.c"; 	Sleep_Cnt = 0;
                                    1-  443     	BANKSEL	_Sleep_Cnt
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 02rr                      1-  444     	CLRR	_Sleep_Cnt
     0019 02rr                      1-  445     	CLRR	(_Sleep_Cnt + 1)
                                    1-  446     	.line	41, "main.c"; 	PCON      = 0 | C_PA4_PLB_Dis | C_PA5_PHB_Dis;
     001A 2150                      1-  447     	MOVIA	0x50
     001B 00rr                      1-  448     	MOVAR	_PCON
                                    1-  449     	.line	42, "main.c"; 	CMPCR     = 0x0c;
     001C 210C                      1-  450     	MOVIA	0x0c
     001D 000r                      1-  451     	IOST	_CMPCR
                                    1-  452     	.line	43, "main.c"; 	T1CR1     = 0;
     001E 0200                      1-  453     	CLRA	
     001F 00rr                      1-  454     	SFUN	_T1CR1
                                    1-  455     	.line	44, "main.c"; 	DISI();
     0020 0013                      1-  456     	DISI
                                    1-  457     	.line	45, "main.c"; 	INTFbits.PABIF = 0;	
     0021 21FD                      1-  458     	MOVIA	0xfd
     0022 00rr                      1-  459     	MOVAR	(_INTFbits + 0)
                                    1-  460     	.line	46, "main.c"; 	INTE           = C_INT_PABKey;
     0023 2102                      1-  461     	MOVIA	0x02
     0024 00rr                      1-  462     	MOVAR	_INTE
                                    1-  463     	.line	47, "main.c"; 	if(KEY_Full && !Charge_DET)
                                    1-  464     	BANKSEL	_PORTA
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 09rr                      1-  465     	BTRSS	_PORTA,3
                                    1-  466     	MGOTO	_02016_DS_
     0027 3rrr                      3-   62 m1      LGOTO rom_address
     0028 0Err                      1-  467     	BTRSC	_PORTA,5
                                    1-  468     	MGOTO	_02016_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  469     	.line	49, "main.c"; 	LED_Off;
     002A 19rr                      1-  470     	BSR	_PORTA,2
                                    1-  471     	.line	50, "main.c"; 	SLEEP(); 
     002B 0001                      1-  472     	sleep
     002C                           1-  473     _02016_DS_:
                                    1-  474     	.line	53, "main.c"; 	NOP();
     002C 0000                      1-  475     	nop
                                    1-  476     	.line	54, "main.c"; 	NOP();
     002D 0000                      1-  477     	nop
                                    1-  478     	.line	56, "main.c"; 	T1CR1 = C_TMR1_En     | C_TMR1_Reload;
     002E 2103                      1-  479     	MOVIA	0x03
     002F 00rr                      1-  480     	SFUN	_T1CR1
                                    1-  481     	.line	57, "main.c"; 	CMPCR = C_CMPFINV_Dis | C_RBias_High_Dis | C_RBias_Low_Dis | 0x0A;
     0030 210A                      1-  482     	MOVIA	0x0a
     0031 000r                      1-  483     	IOST	_CMPCR
                                    1-  484     	.line	58, "main.c"; 	PCON  = C_WDT_En      | C_LVD_En         | C_LVR_En        | C_PA4_PLB_Dis | C_PA5_PHB_Dis;				// Enable WDT ,  Enable LVD
     0032 21F8                      1-  485     	MOVIA	0xf8
     0033 00rr                      1-  486     	MOVAR	_PCON
                                    1-  487     	.line	59, "main.c"; 	INTE  = C_INT_WDT     | C_INT_TMR1;	// Enable WDT overflow interrupt
     0034 2148                      1-  488     	MOVIA	0x48
     0035 00rr                      1-  489     	MOVAR	_INTE
                                    1-  490     	.line	60, "main.c"; 	ENI();
     0036 0004                      1-  491     	ENI
     0037                           1-  492     _02022_DS_:
                                    1-  493     	.line	63, "main.c"; 	LED();
                                    1-  494     	MCALL	_LED
     0037 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  495     	MGOTO	_02024_DS_
     0038 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  496     	.line	65, "main.c"; 	}
                                    1-  497     	RETURN	
     0039 0010                      3-   39 m1      ret
                                    1-  498     ; exit point of _main
                                    1-  501     ;	code size estimation:
                                    1-  502     ;	   89+   15 =   104 instructions (  238 byte)
                                    1-  504     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a054e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
SRAM / SFR   = 0x00000000 - 0x00000000
