
                    Nyquest Technology Co., Ltd.

NYASM 2.61

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"Clock.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_Low_Voltage_Process
                                    1-   15     	extern	_Battery_Full_Process
                                    1-   16     	extern	_Battery_Voltage_Detect
                                    1-   17     	extern	_StandBy_Exit
                                    1-   18     	extern	_StandBy_Check
                                    1-   19     	extern	_StandBy_Mode
                                    1-   20     	extern	_Power_Off
                                    1-   21     	extern	_Init
                                    1-   22     	extern	_clear_ram
                                    1-   23     	extern	_multi_16b
                                    1-   24     	extern	_multi_8b
                                    1-   25     	extern	_T0MD
                                    1-   26     	extern	_PCON1
                                    1-   27     	extern	_CMPCR
                                    1-   28     	extern	_BODCON
                                    1-   29     	extern	_PS0CV
                                    1-   30     	extern	_APHCON
                                    1-   31     	extern	_IOSTB
                                    1-   32     	extern	_IOSTA
                                    1-   33     	extern	_PWM5RH
                                    1-   34     	extern	_PWM5DUTY
                                    1-   35     	extern	_P5CR1
                                    1-   36     	extern	_PWM4DUTY
                                    1-   37     	extern	_P4CR1
                                    1-   38     	extern	_PS3CV
                                    1-   39     	extern	_PWM3DUTY
                                    1-   40     	extern	_T3CR2
                                    1-   41     	extern	_T3CR1
                                    1-   42     	extern	_TMR3
                                    1-   43     	extern	_OSCCR
                                    1-   44     	extern	_PWM2DUTY
                                    1-   45     	extern	_P2CR1
                                    1-   46     	extern	_TBHD
                                    1-   47     	extern	_TBHP
                                    1-   48     	extern	_IRCR
                                    1-   49     	extern	_BZ1CR
                                    1-   50     	extern	_PS1CV
                                    1-   51     	extern	_PWM1DUTY
                                    1-   52     	extern	_T1CR2
                                    1-   53     	extern	_T1CR1
                                    1-   54     	extern	_TMR1
                                    1-   55     	extern	_TM34RH
                                    1-   56     	extern	_TMRH
                                    1-   57     	extern	_PCHBUF
                                    1-   58     	extern	_STATUS
                                    1-   59     	extern	_PCL
                                    1-   60     	extern	_TMR0
                                    1-   61     	extern	_StandBy_ShutDown_Cnt
                                    1-   62     	extern	_Low_Voltage_LED_Flash_Cnt
                                    1-   63     	extern	_Low_Voltage_Cnt
                                    1-   64     	extern	_Low_Voltage_Debounce_Cnt
                                    1-   65     	extern	_TeleCon_LED_Flash_Cnt
                                    1-   66     	extern	_TeleCon_Signal_Recv_Time_Cnt
                                    1-   67     	extern	_TeleCon_Strength_change_Code
                                    1-   68     	extern	_TeleCon_Data_Code
                                    1-   69     	extern	_TeleCon_Check_Code
                                    1-   70     	extern	_Analyze_Save3
                                    1-   71     	extern	_Analyze_Save2
                                    1-   72     	extern	_Analyze_Save1
                                    1-   73     	extern	_TeleCon_Signal_Sbit_Cnt
                                    1-   74     	extern	_TeleCon_Signal_Cnt
                                    1-   75     	extern	_TeleCon_Signal_Save
                                    1-   76     	extern	_Charge_3H_Time_Cnt
                                    1-   77     	extern	_Low_Voltage_LED_Flash_Times_Cnt
                                    1-   78     	extern	_Full_Cnt
                                    1-   79     	extern	_Charge_Cnt
                                    1-   80     	extern	_Charging_LED_Flashing_Time
                                    1-   81     	extern	_M1_Cnt
                                    1-   82     	extern	_Motor_Freq_Cnt2
                                    1-   83     	extern	_Motor_Freq_Cnt1
                                    1-   84     	extern	_Motor_Freq_Cnt0
                                    1-   85     	extern	_M1_Freq_Change_Set
                                    1-   86     	extern	_M1_Freq_Change
                                    1-   87     	extern	_M1_1_Cycle_Set
                                    1-   88     	extern	_M1_1_Duty_Set
                                    1-   89     	extern	_M1_Duty
                                    1-   90     	extern	_M1_Cycle
                                    1-   91     	extern	_Motor_Freq_Change
                                    1-   92     	extern	_M1_Duty_Set
                                    1-   93     	extern	_M1_Cycle_Set
                                    1-   94     	extern	_Key_Quick_Press_LED_Cnt
                                    1-   95     	extern	_Key_Long_Cnt
                                    1-   96     	extern	_Key_Press_Cnt
                                    1-   97     	extern	_Clock_Save
                                    1-   98     	extern	_Sleep_Cnt
                                    1-   99     	extern	_T_1MIN
                                    1-  100     	extern	_T_1S
                                    1-  101     	extern	_T_100MS
                                    1-  102     	extern	_T_10MS
                                    1-  103     	extern	_T_1MS
                                    1-  104     	extern	_T_100US
                                    1-  105     	extern	_Time
                                    1-  106     	extern	_INTE2bits
                                    1-  107     	extern	_RFCbits
                                    1-  108     	extern	_INTEDGbits
                                    1-  109     	extern	_AWUCONbits
                                    1-  110     	extern	_INTFbits
                                    1-  111     	extern	_INTEbits
                                    1-  112     	extern	_BPHCONbits
                                    1-  113     	extern	_ABPLCONbits
                                    1-  114     	extern	_BWUCONbits
                                    1-  115     	extern	_PCONbits
                                    1-  116     	extern	_PORTBbits
                                    1-  117     	extern	_PORTAbits
                                    1-  119     	extern PSAVE
                                    1-  120     	extern SSAVE
                                    1-  121     	extern WSAVE
                                    1-  122     	extern STK12
                                    1-  123     	extern ___STK12
                                    1-  124     	extern STK11
                                    1-  125     	extern ___STK11
                                    1-  126     	extern STK10
                                    1-  127     	extern ___STK10
                                    1-  128     	extern STK09
                                    1-  129     	extern ___STK09
                                    1-  130     	extern STK08
                                    1-  131     	extern ___STK08
                                    1-  132     	extern STK07
                                    1-  133     	extern ___STK07
                                    1-  134     	extern STK06
                                    1-  135     	extern ___STK06
                                    1-  136     	extern STK05
                                    1-  137     	extern ___STK05
                                    1-  138     	extern STK04
                                    1-  139     	extern ___STK04
                                    1-  140     	extern STK03
                                    1-  141     	extern ___STK03
                                    1-  142     	extern STK02
                                    1-  143     	extern ___STK02
                                    1-  144     	extern STK01
                                    1-  145     	extern ___STK01
                                    1-  146     	extern STK00
                                    1-  147     	extern ___STK00
                                    1-  148     ;--------------------------------------------------------
                                    1-  149     ; global declarations
                                    1-  150     ;--------------------------------------------------------
                                    1-  151     	extern	_Sys_Flag3
                                    1-  152     	extern	_Sys_Flag2
                                    1-  153     	extern	_Sys_Flag1
                                    1-  154     	extern	_Sys_Flag4
                                    1-  155     	extern	_Sys_Flag0
                                    1-  156     	extern	_INTE2
                                    1-  157     	extern	_RFC
                                    1-  158     	extern	_INTEDG
                                    1-  159     	extern	_AWUCON
                                    1-  160     	extern	_INTF
                                    1-  161     	extern	_INTE
                                    1-  162     	extern	_BPHCON
                                    1-  163     	extern	_ABPLCON
                                    1-  164     	extern	_BWUCON
                                    1-  165     	extern	_PCON
                                    1-  166     	extern	_PORTB
                                    1-  167     	extern	_PORTA
                                    1-  168     	extern	_Clock
                                    1-  170     ;--------------------------------------------------------
                                    1-  171     ; global definitions
                                    1-  172     ;--------------------------------------------------------
                                    1-  173     ;--------------------------------------------------------
                                    1-  174     ; absolute symbol definitions
                                    1-  175     ;--------------------------------------------------------
                                    1-  176     ;--------------------------------------------------------
                                    1-  177     ; compiler-defined variables
                                    1-  178     ;--------------------------------------------------------
                                    1-  179     ;--------------------------------------------------------
                                    1-  180     ; initialized data
                                    1-  181     ;--------------------------------------------------------
                                    1-  182     ;--------------------------------------------------------
                                    1-  183     ; initialized absolute data
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     ;--------------------------------------------------------
                                    1-  186     ; overlayable items in internal ram 
                                    1-  187     ;--------------------------------------------------------
                                    1-  188     ;	udata_ovr
                                    1-  189     ;--------------------------------------------------------
                                    1-  190     ; code
                                    1-  191     ;--------------------------------------------------------
                                    1-  192     ; code_Clock	code
                                    1-  193     ;***
                                    1-  194     ;  pBlock Stats: dbName = C
                                    1-  195     ;***
                                    1-  196     ;has an exit
                                    1-  197     ;functions called:
                                    1-  198     ;   _Power_Off
                                    1-  199     ;   _Power_Off
                                    1-  200     ;; Starting pCode block
                                    1-  201     .segment "code"; module=Clock, function=_Clock
     0000                           1-  203     _Clock:
                                    1-  204     ; 2 exit points
                                    1-  205     ;;unsigned compare: left < lit(0xA=10), size=1
                                    1-  206     	.line	5, "Clock.c"; 	if (Time >= Time_1MS) // 1ms计时器
     0000 210A                      1-  207     	MOVIA	0x0a
                                    1-  208     	BANKSEL	_Time
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 04rr                      1-  209     	SUBAR	_Time,W
     0003 0803                      1-  210     	BTRSS	STATUS,0
                                    1-  211     	MGOTO	_02032_DS_
     0004 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  212     	.line	7, "Clock.c"; 	Time = 0; // 清空计时器
     0005 02rr                      1-  213     	CLRR	_Time
                                    1-  214     	.line	8, "Clock.c"; 	T_10MS++; // 10ms计时器+1
                                    1-  215     	BANKSEL	_T_10MS
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 05rr                      1-  216     	INCR	_T_10MS,F
                                    1-  217     	.line	9, "Clock.c"; 	Charge_Cnt++;
                                    1-  218     	BANKSEL	_Charge_Cnt
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 05rr                      1-  219     	INCR	_Charge_Cnt,F
                                    1-  220     	.line	10, "Clock.c"; 	Key_Press_Cnt++;
                                    1-  221     	BANKSEL	_Key_Press_Cnt
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 05rr                      1-  222     	INCR	_Key_Press_Cnt,F
                                    1-  223     	.line	11, "Clock.c"; 	Low_Voltage_Debounce_Cnt++;
                                    1-  224     	BANKSEL	_Low_Voltage_Debounce_Cnt
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 05rr                      1-  225     	INCR	_Low_Voltage_Debounce_Cnt,F
                                    1-  226     	.line	12, "Clock.c"; 	if (TeleCon_LED_Flash_FLAG)
                                    1-  227     	BANKSEL	_Sys_Flag3
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 0Brr                      1-  228     	BTRSS	_Sys_Flag3,7
                                    1-  229     	MGOTO	_02006_DS_
     0010 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  230     	.line	14, "Clock.c"; 	TeleCon_LED_Flash_Cnt++;
                                    1-  231     	BANKSEL	_TeleCon_LED_Flash_Cnt
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 05rr                      1-  232     	INCR	_TeleCon_LED_Flash_Cnt,F
     0013 0D03                      1-  233     	BTRSC	STATUS,2
     0014 05rr                      1-  234     	INCR	(_TeleCon_LED_Flash_Cnt + 1),F
                                    1-  235     	MGOTO	_02007_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
     0016                           1-  236     _02006_DS_:
                                    1-  237     	.line	18, "Clock.c"; 	TeleCon_LED_Flash_Cnt = 0;
                                    1-  238     	BANKSEL	_TeleCon_LED_Flash_Cnt
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 02rr                      1-  239     	CLRR	_TeleCon_LED_Flash_Cnt
     0018 02rr                      1-  240     	CLRR	(_TeleCon_LED_Flash_Cnt + 1)
                                    1-  241     ;;unsigned compare: left < lit(0xA=10), size=1
     0019                           1-  242     _02007_DS_:
                                    1-  243     	.line	22, "Clock.c"; 	if (T_10MS >= Time_10MS) // 10ms计时器溢出
     0019 210A                      1-  244     	MOVIA	0x0a
                                    1-  245     	BANKSEL	_T_10MS
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 04rr                      1-  246     	SUBAR	_T_10MS,W
     001C 0803                      1-  247     	BTRSS	STATUS,0
                                    1-  248     	MGOTO	_02032_DS_
     001D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  249     	.line	25, "Clock.c"; 	T_10MS = 0; // 清空10ms计时器
     001E 02rr                      1-  250     	CLRR	_T_10MS
                                    1-  251     	.line	26, "Clock.c"; 	T_100MS++;  // 100ms计时器
                                    1-  252     	BANKSEL	_T_100MS
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 05rr                      1-  253     	INCR	_T_100MS,F
                                    1-  254     	.line	28, "Clock.c"; 	if (Signal_Recv_Time_FLAG)
                                    1-  255     	BANKSEL	_Sys_Flag2
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 09rr                      1-  256     	BTRSS	_Sys_Flag2,3
                                    1-  257     	MGOTO	_02011_DS_
     0023 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  258     	.line	30, "Clock.c"; 	TeleCon_Signal_Recv_Time_Cnt++;
                                    1-  259     	BANKSEL	_TeleCon_Signal_Recv_Time_Cnt
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 05rr                      1-  260     	INCR	_TeleCon_Signal_Recv_Time_Cnt,F
     0026 0D03                      1-  261     	BTRSC	STATUS,2
     0027 05rr                      1-  262     	INCR	(_TeleCon_Signal_Recv_Time_Cnt + 1),F
                                    1-  263     ;;signed compare: left < lit(0x37=55), size=2, mask=ffff
                                    1-  264     	.line	31, "Clock.c"; 	if (TeleCon_Signal_Recv_Time_Cnt >= Telecontrol_Signal_Recv_Time)
     0028 01rr                      1-  265     	MOVR	(_TeleCon_Signal_Recv_Time_Cnt + 1),W
     0029 2580                      1-  266     	ADDIA	0x80
     002A 2580                      1-  267     	ADDIA	0x80
     002B 0903                      1-  268     	BTRSS	STATUS,2
                                    1-  269     	MGOTO	_02086_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
     002D 2137                      1-  270     	MOVIA	0x37
     002E 04rr                      1-  271     	SUBAR	_TeleCon_Signal_Recv_Time_Cnt,W
     002F                           1-  272     _02086_DS_:
     002F 0803                      1-  273     	BTRSS	STATUS,0
                                    1-  274     	MGOTO	_02011_DS_
     0030 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  275     	.line	33, "Clock.c"; 	Signal_Recv_Time_FLAG = 0;
                                    1-  276     	BANKSEL	_Sys_Flag2
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 1Drr                      1-  277     	BCR	_Sys_Flag2,3
     0033                           1-  278     _02011_DS_:
                                    1-  279     	.line	36, "Clock.c"; 	Sleep_Cnt++;
                                    1-  280     	BANKSEL	_Sleep_Cnt
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 05rr                      1-  281     	INCR	_Sleep_Cnt,F
     0035 0D03                      1-  282     	BTRSC	STATUS,2
     0036 05rr                      1-  283     	INCR	(_Sleep_Cnt + 1),F
                                    1-  284     	.line	38, "Clock.c"; 	if (Low_Voltage_3P0_FLAG)
                                    1-  285     	BANKSEL	_Sys_Flag4
     0037 rrrr                      3-  109 m1      .banksel ram_address
     0038 09rr                      1-  286     	BTRSS	_Sys_Flag4,3
                                    1-  287     	MGOTO	_00001_DS_
     0039 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  288     	.line	40, "Clock.c"; 	Low_Voltage_LED_Flash_Cnt++;
                                    1-  289     	BANKSEL	_Low_Voltage_LED_Flash_Cnt
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 05rr                      1-  290     	INCR	_Low_Voltage_LED_Flash_Cnt,F
     003C                           1-  291     _00001_DS_:
                                    1-  292     	.line	43, "Clock.c"; 	if (Key_LED_Flash_FLAG) // 按键按下标志位为1
                                    1-  293     	BANKSEL	_Sys_Flag0
     003C rrrr                      3-  109 m1      .banksel ram_address
     003D 0Arr                      1-  294     	BTRSS	_Sys_Flag0,5
                                    1-  295     	MGOTO	_00002_DS_
     003E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  296     	.line	45, "Clock.c"; 	Key_Quick_Press_LED_Cnt++; // 短按按键切换LED闪烁提示计数器+1
                                    1-  297     	BANKSEL	_Key_Quick_Press_LED_Cnt
     003F rrrr                      3-  109 m1      .banksel ram_address
     0040 05rr                      1-  298     	INCR	_Key_Quick_Press_LED_Cnt,F
     0041                           1-  299     _00002_DS_:
                                    1-  300     	.line	49, "Clock.c"; 	if (T_100MS >= Time_100MS) // 100ms计时器溢出
     0041 210A                      1-  301     	MOVIA	0x0a
                                    1-  302     	BANKSEL	_T_100MS
     0042 rrrr                      3-  109 m1      .banksel ram_address
     0043 04rr                      1-  303     	SUBAR	_T_100MS,W
     0044 0803                      1-  304     	BTRSS	STATUS,0
                                    1-  305     	MGOTO	_02032_DS_
     0045 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  306     	.line	51, "Clock.c"; 	Charging_LED_Flashing_Time++;
                                    1-  307     	BANKSEL	_Charging_LED_Flashing_Time
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 05rr                      1-  308     	INCR	_Charging_LED_Flashing_Time,F
                                    1-  309     	.line	52, "Clock.c"; 	if (Low_Voltage_3P0_FLAG)
                                    1-  310     	BANKSEL	_Sys_Flag4
     0048 rrrr                      3-  109 m1      .banksel ram_address
     0049 09rr                      1-  311     	BTRSS	_Sys_Flag4,3
                                    1-  312     	MGOTO	_00003_DS_
     004A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  313     	.line	54, "Clock.c"; 	Low_Voltage_Cnt++;
                                    1-  314     	BANKSEL	_Low_Voltage_Cnt
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 05rr                      1-  315     	INCR	_Low_Voltage_Cnt,F
     004D                           1-  316     _00003_DS_:
                                    1-  317     	.line	56, "Clock.c"; 	T_100MS = 0; // 清空100ms计时器
                                    1-  318     	BANKSEL	_T_100MS
     004D rrrr                      3-  109 m1      .banksel ram_address
     004E 02rr                      1-  319     	CLRR	_T_100MS
                                    1-  320     	.line	57, "Clock.c"; 	T_1S++;      // 1s计时器+1
                                    1-  321     	BANKSEL	_T_1S
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 05rr                      1-  322     	INCR	_T_1S,F
                                    1-  323     ;;unsigned compare: left < lit(0xA=10), size=1
                                    1-  324     	.line	60, "Clock.c"; 	if (T_1S >= Time_1S) // 1s计时器溢出
     0051 210A                      1-  325     	MOVIA	0x0a
     0052 04rr                      1-  326     	SUBAR	_T_1S,W
     0053 0803                      1-  327     	BTRSS	STATUS,0
                                    1-  328     	MGOTO	_02032_DS_
     0054 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  329     	.line	62, "Clock.c"; 	T_1S = 0; // 清空1s计时器
     0055 02rr                      1-  330     	CLRR	_T_1S
                                    1-  331     	.line	64, "Clock.c"; 	Full_Cnt++;
                                    1-  332     	BANKSEL	_Full_Cnt
     0056 rrrr                      3-  109 m1      .banksel ram_address
     0057 05rr                      1-  333     	INCR	_Full_Cnt,F
                                    1-  334     	.line	65, "Clock.c"; 	if (Charging_FLAG)
                                    1-  335     	BANKSEL	_Sys_Flag1
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 0Brr                      1-  336     	BTRSS	_Sys_Flag1,6
                                    1-  337     	MGOTO	_02019_DS_
     005A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  338     	.line	67, "Clock.c"; 	Charge_3H_Time_Cnt++;
                                    1-  339     	BANKSEL	_Charge_3H_Time_Cnt
     005B rrrr                      3-  109 m1      .banksel ram_address
     005C 05rr                      1-  340     	INCR	_Charge_3H_Time_Cnt,F
     005D 0D03                      1-  341     	BTRSC	STATUS,2
     005E 05rr                      1-  342     	INCR	(_Charge_3H_Time_Cnt + 1),F
     005F                           1-  343     _02019_DS_:
                                    1-  344     	.line	69, "Clock.c"; 	if (StandBy_FLAG)
                                    1-  345     	BANKSEL	_Sys_Flag2
     005F rrrr                      3-  109 m1      .banksel ram_address
     0060 0Arr                      1-  346     	BTRSS	_Sys_Flag2,5
                                    1-  347     	MGOTO	_02032_DS_
     0061 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  348     	.line	71, "Clock.c"; 	StandBy_ShutDown_Cnt++;
                                    1-  349     	BANKSEL	_StandBy_ShutDown_Cnt
     0062 rrrr                      3-  109 m1      .banksel ram_address
     0063 05rr                      1-  350     	INCR	_StandBy_ShutDown_Cnt,F
     0064 0D03                      1-  351     	BTRSC	STATUS,2
     0065 05rr                      1-  352     	INCR	(_StandBy_ShutDown_Cnt + 1),F
                                    1-  353     ;;signed compare: left < lit(0x71C=1820), size=2, mask=ffff
                                    1-  354     	.line	72, "Clock.c"; 	if (StandBy_ShutDown_Cnt >= StandBy_ShutDown_Time)
     0066 01rr                      1-  355     	MOVR	(_StandBy_ShutDown_Cnt + 1),W
     0067 2580                      1-  356     	ADDIA	0x80
     0068 2579                      1-  357     	ADDIA	0x79
     0069 0903                      1-  358     	BTRSS	STATUS,2
                                    1-  359     	MGOTO	_02087_DS_
     006A 3rrr                      3-   62 m1      LGOTO rom_address
     006B 211C                      1-  360     	MOVIA	0x1c
     006C 04rr                      1-  361     	SUBAR	_StandBy_ShutDown_Cnt,W
     006D                           1-  362     _02087_DS_:
     006D 0803                      1-  363     	BTRSS	STATUS,0
                                    1-  364     	MGOTO	_02032_DS_
     006E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  365     	.line	74, "Clock.c"; 	StandBy_FLAG         = 0;
                                    1-  366     	BANKSEL	_Sys_Flag2
     006F rrrr                      3-  109 m1      .banksel ram_address
     0070 1Err                      1-  367     	BCR	_Sys_Flag2,5
                                    1-  368     	.line	75, "Clock.c"; 	StandBy_ShutDown_Cnt = 0;
                                    1-  369     	BANKSEL	_StandBy_ShutDown_Cnt
     0071 rrrr                      3-  109 m1      .banksel ram_address
     0072 02rr                      1-  370     	CLRR	_StandBy_ShutDown_Cnt
     0073 02rr                      1-  371     	CLRR	(_StandBy_ShutDown_Cnt + 1)
                                    1-  372     	.line	76, "Clock.c"; 	Power_Off();
                                    1-  373     	MCALL	_Power_Off
     0074 2rrr                      3-   65 m1      LCALL rom_address
     0075                           1-  374     _02032_DS_:
                                    1-  375     	.line	83, "Clock.c"; 	}
                                    1-  376     	RETURN	
     0075 0010                      3-   39 m1      ret
                                    1-  377     ; exit point of _Clock
                                    1-  380     ;	code size estimation:
                                    1-  381     ;	   87+   31 =   118 instructions (  298 byte)
                                    1-  383     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/Clock.s
002 ny8a054e.inc
003 common.inc
004 Clock.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
SRAM / SFR   = 0x00000000 - 0x00000000
