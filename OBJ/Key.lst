
                    Nyquest Technology Co., Ltd.

NYASM 2.61

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"Key.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    2-    1     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_Motor_PWM_Loop2
                                    1-   15     	extern	_Motor_PWM_Loop1
                                    1-   16     	extern	_M1_Reset
                                    1-   17     	extern	_M1_Work
                                    1-   18     	extern	_M1_Work_Processs
                                    1-   19     	extern	_Low_Voltage_Process
                                    1-   20     	extern	_Battery_Full_Process
                                    1-   21     	extern	_Battery_Voltage_Detect
                                    1-   22     	extern	_StandBy_Exit
                                    1-   23     	extern	_StandBy_Check
                                    1-   24     	extern	_StandBy_Mode
                                    1-   25     	extern	_Power_Off
                                    1-   26     	extern	_Init
                                    1-   27     	extern	_clear_ram
                                    1-   28     	extern	_multi_16b
                                    1-   29     	extern	_multi_8b
                                    1-   30     	extern	_T0MD
                                    1-   31     	extern	_PCON1
                                    1-   32     	extern	_CMPCR
                                    1-   33     	extern	_BODCON
                                    1-   34     	extern	_PS0CV
                                    1-   35     	extern	_APHCON
                                    1-   36     	extern	_IOSTB
                                    1-   37     	extern	_IOSTA
                                    1-   38     	extern	_PWM5RH
                                    1-   39     	extern	_PWM5DUTY
                                    1-   40     	extern	_P5CR1
                                    1-   41     	extern	_PWM4DUTY
                                    1-   42     	extern	_P4CR1
                                    1-   43     	extern	_PS3CV
                                    1-   44     	extern	_PWM3DUTY
                                    1-   45     	extern	_T3CR2
                                    1-   46     	extern	_T3CR1
                                    1-   47     	extern	_TMR3
                                    1-   48     	extern	_OSCCR
                                    1-   49     	extern	_PWM2DUTY
                                    1-   50     	extern	_P2CR1
                                    1-   51     	extern	_TBHD
                                    1-   52     	extern	_TBHP
                                    1-   53     	extern	_IRCR
                                    1-   54     	extern	_BZ1CR
                                    1-   55     	extern	_PS1CV
                                    1-   56     	extern	_PWM1DUTY
                                    1-   57     	extern	_T1CR2
                                    1-   58     	extern	_T1CR1
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_TM34RH
                                    1-   61     	extern	_TMRH
                                    1-   62     	extern	_PCHBUF
                                    1-   63     	extern	_STATUS
                                    1-   64     	extern	_PCL
                                    1-   65     	extern	_TMR0
                                    1-   66     	extern	_StandBy_ShutDown_Cnt
                                    1-   67     	extern	_Low_Voltage_LED_Flash_Cnt
                                    1-   68     	extern	_Low_Voltage_Cnt
                                    1-   69     	extern	_Low_Voltage_Debounce_Cnt
                                    1-   70     	extern	_TeleCon_LED_Flash_Cnt
                                    1-   71     	extern	_TeleCon_Signal_Recv_Time_Cnt
                                    1-   72     	extern	_TeleCon_Strength_change_Code
                                    1-   73     	extern	_TeleCon_Data_Code
                                    1-   74     	extern	_TeleCon_Check_Code
                                    1-   75     	extern	_Analyze_Save3
                                    1-   76     	extern	_Analyze_Save2
                                    1-   77     	extern	_Analyze_Save1
                                    1-   78     	extern	_TeleCon_Signal_Sbit_Cnt
                                    1-   79     	extern	_TeleCon_Signal_Cnt
                                    1-   80     	extern	_TeleCon_Signal_Save
                                    1-   81     	extern	_Charge_3H_Time_Cnt
                                    1-   82     	extern	_Low_Voltage_LED_Flash_Times_Cnt
                                    1-   83     	extern	_Full_Cnt
                                    1-   84     	extern	_Charge_Cnt
                                    1-   85     	extern	_Charging_LED_Flashing_Time
                                    1-   86     	extern	_M1_Cnt
                                    1-   87     	extern	_Motor_Freq_Cnt2
                                    1-   88     	extern	_Motor_Freq_Cnt1
                                    1-   89     	extern	_Motor_Freq_Cnt0
                                    1-   90     	extern	_M1_Freq_Change_Set
                                    1-   91     	extern	_M1_Freq_Change
                                    1-   92     	extern	_M1_1_Cycle_Set
                                    1-   93     	extern	_M1_1_Duty_Set
                                    1-   94     	extern	_M1_Duty
                                    1-   95     	extern	_M1_Cycle
                                    1-   96     	extern	_Motor_Freq_Change
                                    1-   97     	extern	_M1_Duty_Set
                                    1-   98     	extern	_M1_Cycle_Set
                                    1-   99     	extern	_Key_Quick_Press_LED_Cnt
                                    1-  100     	extern	_Key_Long_Cnt
                                    1-  101     	extern	_Key_Press_Cnt
                                    1-  102     	extern	_Clock_Save
                                    1-  103     	extern	_Sleep_Cnt
                                    1-  104     	extern	_T_1MIN
                                    1-  105     	extern	_T_1S
                                    1-  106     	extern	_T_100MS
                                    1-  107     	extern	_T_10MS
                                    1-  108     	extern	_T_1MS
                                    1-  109     	extern	_T_100US
                                    1-  110     	extern	_Time
                                    1-  111     	extern	_INTE2bits
                                    1-  112     	extern	_RFCbits
                                    1-  113     	extern	_INTEDGbits
                                    1-  114     	extern	_AWUCONbits
                                    1-  115     	extern	_INTFbits
                                    1-  116     	extern	_INTEbits
                                    1-  117     	extern	_BPHCONbits
                                    1-  118     	extern	_ABPLCONbits
                                    1-  119     	extern	_BWUCONbits
                                    1-  120     	extern	_PCONbits
                                    1-  121     	extern	_PORTBbits
                                    1-  122     	extern	_PORTAbits
                                    1-  124     	extern PSAVE
                                    1-  125     	extern SSAVE
                                    1-  126     	extern WSAVE
                                    1-  127     	extern STK12
                                    1-  128     	extern ___STK12
                                    1-  129     	extern STK11
                                    1-  130     	extern ___STK11
                                    1-  131     	extern STK10
                                    1-  132     	extern ___STK10
                                    1-  133     	extern STK09
                                    1-  134     	extern ___STK09
                                    1-  135     	extern STK08
                                    1-  136     	extern ___STK08
                                    1-  137     	extern STK07
                                    1-  138     	extern ___STK07
                                    1-  139     	extern STK06
                                    1-  140     	extern ___STK06
                                    1-  141     	extern STK05
                                    1-  142     	extern ___STK05
                                    1-  143     	extern STK04
                                    1-  144     	extern ___STK04
                                    1-  145     	extern STK03
                                    1-  146     	extern ___STK03
                                    1-  147     	extern STK02
                                    1-  148     	extern ___STK02
                                    1-  149     	extern STK01
                                    1-  150     	extern ___STK01
                                    1-  151     	extern STK00
                                    1-  152     	extern ___STK00
                                    1-  153     ;--------------------------------------------------------
                                    1-  154     ; global declarations
                                    1-  155     ;--------------------------------------------------------
                                    1-  156     	extern	_Sys_Flag3
                                    1-  157     	extern	_Sys_Flag2
                                    1-  158     	extern	_Sys_Flag1
                                    1-  159     	extern	_Sys_Flag4
                                    1-  160     	extern	_Sys_Flag0
                                    1-  161     	extern	_INTE2
                                    1-  162     	extern	_RFC
                                    1-  163     	extern	_INTEDG
                                    1-  164     	extern	_AWUCON
                                    1-  165     	extern	_INTF
                                    1-  166     	extern	_INTE
                                    1-  167     	extern	_BPHCON
                                    1-  168     	extern	_ABPLCON
                                    1-  169     	extern	_BWUCON
                                    1-  170     	extern	_PCON
                                    1-  171     	extern	_PORTB
                                    1-  172     	extern	_PORTA
                                    1-  173     	extern	_Key_Scan
                                    1-  175     ;--------------------------------------------------------
                                    1-  176     ; global definitions
                                    1-  177     ;--------------------------------------------------------
                                    1-  178     ;--------------------------------------------------------
                                    1-  179     ; absolute symbol definitions
                                    1-  180     ;--------------------------------------------------------
                                    1-  181     ;--------------------------------------------------------
                                    1-  182     ; compiler-defined variables
                                    1-  183     ;--------------------------------------------------------
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     ; initialized data
                                    1-  186     ;--------------------------------------------------------
                                    1-  187     ;--------------------------------------------------------
                                    1-  188     ; initialized absolute data
                                    1-  189     ;--------------------------------------------------------
                                    1-  190     ;--------------------------------------------------------
                                    1-  191     ; overlayable items in internal ram 
                                    1-  192     ;--------------------------------------------------------
                                    1-  193     ;	udata_ovr
                                    1-  194     ;--------------------------------------------------------
                                    1-  195     ; code
                                    1-  196     ;--------------------------------------------------------
                                    1-  197     ; code_Key	code
                                    1-  198     ;***
                                    1-  199     ;  pBlock Stats: dbName = C
                                    1-  200     ;***
                                    1-  201     ;has an exit
                                    1-  202     ;functions called:
                                    1-  203     ;   _M1_Reset
                                    1-  204     ;   _M1_Work
                                    1-  205     ;   _Power_Off
                                    1-  206     ;   _StandBy_Mode
                                    1-  207     ;   _M1_Reset
                                    1-  208     ;   _M1_Work
                                    1-  209     ;   _Power_Off
                                    1-  210     ;   _StandBy_Mode
                                    1-  211     ;; Starting pCode block
                                    1-  212     .segment "code"; module=Key, function=_Key_Scan
     0000                           1-  214     _Key_Scan:
                                    1-  215     ; 2 exit points
                                    1-  216     	.line	5, "Key.c"; 	if (KEY_Full) // KEY没有按下
                                    1-  217     	BANKSEL	_PORTA
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 09rr                      1-  218     	BTRSS	_PORTA,3
                                    1-  219     	MGOTO	_02010_DS_
     0002 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  220     	.line	7, "Key.c"; 	if (Key_Press_FLAG) // 按键按下标志位为1
                                    1-  221     	BANKSEL	_Sys_Flag0
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 08rr                      1-  222     	BTRSS	_Sys_Flag0,1
                                    1-  223     	MGOTO	_02011_DS_
     0005 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  224     	.line	9, "Key.c"; 	Key_Press_FLAG = 0; // 按键按下标志位清零
     0006 1Crr                      1-  225     	BCR	_Sys_Flag0,1
                                    1-  226     	.line	10, "Key.c"; 	Key_Press_Cnt  = 0; // 按键按下计数器清零
                                    1-  227     	BANKSEL	_Key_Press_Cnt
     0007 rrrr                      3-  109 m1      .banksel ram_address
     0008 02rr                      1-  228     	CLRR	_Key_Press_Cnt
                                    1-  229     	MGOTO	_02011_DS_
     0009 3rrr                      3-   62 m1      LGOTO rom_address
     000A                           1-  230     _02010_DS_:
                                    1-  231     	.line	15, "Key.c"; 	if (!Key_Press_FLAG) // 按键按下标志位为0
                                    1-  232     	BANKSEL	_Sys_Flag0
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 0Crr                      1-  233     	BTRSC	_Sys_Flag0,1
                                    1-  234     	MGOTO	_02011_DS_
     000C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  235     	.line	17, "Key.c"; 	Key_Press_FLAG = 1; // 按键按下标志位置1
     000D 18rr                      1-  236     	BSR	_Sys_Flag0,1
                                    1-  237     	.line	18, "Key.c"; 	Key_Press_Cnt  = 0; // 按键按下计数器清零
                                    1-  238     	BANKSEL	_Key_Press_Cnt
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 02rr                      1-  239     	CLRR	_Key_Press_Cnt
                                    1-  240     ;;unsigned compare: left < lit(0x28=40), size=1
     0010                           1-  241     _02011_DS_:
                                    1-  242     	.line	22, "Key.c"; 	if (Key_Press_Cnt >= Key_Debounce_Time) // 进行消抖计数
     0010 2128                      1-  243     	MOVIA	0x28
                                    1-  244     	BANKSEL	_Key_Press_Cnt
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 04rr                      1-  245     	SUBAR	_Key_Press_Cnt,W
     0013 0803                      1-  246     	BTRSS	STATUS,0
                                    1-  247     	MGOTO	_02020_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  248     	.line	24, "Key.c"; 	if (Key_Press_FLAG)
                                    1-  249     	BANKSEL	_Sys_Flag0
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 08rr                      1-  250     	BTRSS	_Sys_Flag0,1
                                    1-  251     	MGOTO	_02013_DS_
     0017 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  252     	.line	26, "Key.c"; 	Key_Debounce_FLAG = 1;
     0018 19rr                      1-  253     	BSR	_Sys_Flag0,2
                                    1-  254     	MGOTO	_02014_DS_
     0019 3rrr                      3-   62 m1      LGOTO rom_address
     001A                           1-  255     _02013_DS_:
                                    1-  256     	.line	30, "Key.c"; 	Key_Debounce_FLAG = 0;
                                    1-  257     	BANKSEL	_Sys_Flag0
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 1Drr                      1-  258     	BCR	_Sys_Flag0,2
     001C                           1-  259     _02014_DS_:
                                    1-  260     	.line	32, "Key.c"; 	if (Key_Debounce_FLAG) // 消抖后的按键状态为1
                                    1-  261     	BANKSEL	_Sys_Flag0
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 09rr                      1-  262     	BTRSS	_Sys_Flag0,2
                                    1-  263     	MGOTO	_02018_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  264     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  265     ;;unsigned compare: left >= lit(0x27=39), size=1
                                    1-  266     	.line	34, "Key.c"; 	if (Key_Long_Cnt <= Key_Long_Press_Time) // 长按计数器小于长按时间
     001F 2127                      1-  267     	MOVIA	0x27
                                    1-  268     	BANKSEL	_Key_Long_Cnt
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 04rr                      1-  269     	SUBAR	_Key_Long_Cnt,W
     0022 0803                      1-  270     	BTRSS	STATUS,0
                                    1-  271     	.line	36, "Key.c"; 	Key_Long_Cnt++; // 长按计数器+1
     0023 05rr                      1-  272     	INCR	_Key_Long_Cnt,F
     0024                           1-  273     _02018_DS_:
                                    1-  274     	.line	40, "Key.c"; 	Key_Press_Cnt = 0;
                                    1-  275     	BANKSEL	_Key_Press_Cnt
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 02rr                      1-  276     	CLRR	_Key_Press_Cnt
     0026                           1-  277     _02020_DS_:
                                    1-  278     	.line	43, "Key.c"; 	if (!Key_Debounce_FLAG) // 如果松开按键
                                    1-  279     	BANKSEL	_Sys_Flag0
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 0Drr                      1-  280     	BTRSC	_Sys_Flag0,2
                                    1-  281     	MGOTO	_02033_DS_
     0028 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  282     	.line	45, "Key.c"; 	if (Key_Long_Cnt)
                                    1-  283     	BANKSEL	_Key_Long_Cnt
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 01rr                      1-  284     	MOVR	_Key_Long_Cnt,W
     002B 0D03                      1-  285     	BTRSC	STATUS,2
                                    1-  286     	MGOTO	_02033_DS_
     002C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  287     ;;unsigned compare: left < lit(0x26=38), size=1
                                    1-  288     	.line	47, "Key.c"; 	if (Key_Long_Cnt < Key_Long_Press_Time && Power_Onoff_FLAG)
     002D 2126                      1-  289     	MOVIA	0x26
     002E 04rr                      1-  290     	SUBAR	_Key_Long_Cnt,W
     002F 0C03                      1-  291     	BTRSC	STATUS,0
                                    1-  292     	MGOTO	_02028_DS_
     0030 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  293     	BANKSEL	_Sys_Flag0
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 08rr                      1-  294     	BTRSS	_Sys_Flag0,0
                                    1-  295     	MGOTO	_02028_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  296     	.line	49, "Key.c"; 	Key_LED_Flash_FLAG = 1;
     0034 1Arr                      1-  297     	BSR	_Sys_Flag0,5
                                    1-  298     	.line	50, "Key.c"; 	if (StandBy_FLAG)
                                    1-  299     	BANKSEL	_Sys_Flag2
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 0Arr                      1-  300     	BTRSS	_Sys_Flag2,5
                                    1-  301     	MGOTO	_02025_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  302     	.line	52, "Key.c"; 	StandBy_FLAG       = 0;
     0038 1Err                      1-  303     	BCR	_Sys_Flag2,5
                                    1-  304     	.line	53, "Key.c"; 	Key_LED_Flash_FLAG = 1;
                                    1-  305     	BANKSEL	_Sys_Flag0
     0039 rrrr                      3-  109 m1      .banksel ram_address
     003A 1Arr                      1-  306     	BSR	_Sys_Flag0,5
                                    1-  307     	.line	54, "Key.c"; 	M1_PWM_Write_FLAG  = 1;
                                    1-  308     	BANKSEL	_Sys_Flag1
     003B rrrr                      3-  109 m1      .banksel ram_address
     003C 19rr                      1-  309     	BSR	_Sys_Flag1,2
                                    1-  310     	.line	55, "Key.c"; 	M1_Freq_Change     = 1;
     003D 2101                      1-  311     	MOVIA	0x01
                                    1-  312     	BANKSEL	_M1_Freq_Change
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 00rr                      1-  313     	MOVAR	_M1_Freq_Change
                                    1-  314     	MGOTO	_02026_DS_
     0040 3rrr                      3-   62 m1      LGOTO rom_address
     0041                           1-  315     _02025_DS_:
                                    1-  316     	.line	59, "Key.c"; 	Key_LED_Flash_FLAG = 1;
                                    1-  317     	BANKSEL	_Sys_Flag0
     0041 rrrr                      3-  109 m1      .banksel ram_address
     0042 1Arr                      1-  318     	BSR	_Sys_Flag0,5
                                    1-  319     	.line	60, "Key.c"; 	M1_PWM_Write_FLAG  = 1;
                                    1-  320     	BANKSEL	_Sys_Flag1
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 19rr                      1-  321     	BSR	_Sys_Flag1,2
                                    1-  322     ;;unsigned compare: left < lit(0xA=10), size=1
                                    1-  323     	.line	61, "Key.c"; 	if (M1_Freq_Change >= 10)
     0045 210A                      1-  324     	MOVIA	0x0a
                                    1-  325     	BANKSEL	_M1_Freq_Change
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 04rr                      1-  326     	SUBAR	_M1_Freq_Change,W
     0048 0803                      1-  327     	BTRSS	STATUS,0
                                    1-  328     	MGOTO	_02022_DS_
     0049 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  329     	.line	63, "Key.c"; 	M1_Freq_Change = 1;
     004A 2101                      1-  330     	MOVIA	0x01
     004B 00rr                      1-  331     	MOVAR	_M1_Freq_Change
                                    1-  332     	MGOTO	_02026_DS_
     004C 3rrr                      3-   62 m1      LGOTO rom_address
     004D                           1-  333     _02022_DS_:
                                    1-  334     	.line	67, "Key.c"; 	M1_Freq_Change++;
                                    1-  335     	BANKSEL	_M1_Freq_Change
     004D rrrr                      3-  109 m1      .banksel ram_address
     004E 05rr                      1-  336     	INCR	_M1_Freq_Change,F
     004F                           1-  337     _02026_DS_:
                                    1-  338     	.line	70, "Key.c"; 	M1_Reset();
                                    1-  339     	MCALL	_M1_Reset
     004F 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  340     	.line	71, "Key.c"; 	M1_Work();
                                    1-  341     	MCALL	_M1_Work
     0050 2rrr                      3-   65 m1      LCALL rom_address
     0051                           1-  342     _02028_DS_:
                                    1-  343     	.line	73, "Key.c"; 	Key_Long_Cnt = 0; // 长按计数器清零
                                    1-  344     	BANKSEL	_Key_Long_Cnt
     0051 rrrr                      3-  109 m1      .banksel ram_address
     0052 02rr                      1-  345     	CLRR	_Key_Long_Cnt
     0053                           1-  346     _02033_DS_:
                                    1-  347     	.line	77, "Key.c"; 	if (Key_Long_Cnt == Key_Long_Press_Time)
                                    1-  348     	BANKSEL	_Key_Long_Cnt
     0053 rrrr                      3-  109 m1      .banksel ram_address
     0054 01rr                      1-  349     	MOVR	_Key_Long_Cnt,W
     0055 2426                      1-  350     	XORIA	0x26
     0056 0903                      1-  351     	BTRSS	STATUS,2
                                    1-  352     	MGOTO	_02041_DS_
     0057 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  353     	.line	79, "Key.c"; 	Key_Long_Cnt++; // 长按计数器+1
     0058 05rr                      1-  354     	INCR	_Key_Long_Cnt,F
                                    1-  355     	.line	80, "Key.c"; 	if (Power_Onoff_FLAG) // 如果处于开机状态
                                    1-  356     	BANKSEL	_Sys_Flag0
     0059 rrrr                      3-  109 m1      .banksel ram_address
     005A 08rr                      1-  357     	BTRSS	_Sys_Flag0,0
                                    1-  358     	MGOTO	_02037_DS_
     005B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  359     	.line	82, "Key.c"; 	Power_Off();
                                    1-  360     	MCALL	_Power_Off
     005C 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  361     	MGOTO	_02041_DS_
     005D 3rrr                      3-   62 m1      LGOTO rom_address
     005E                           1-  362     _02037_DS_:
                                    1-  363     	.line	86, "Key.c"; 	Power_Onoff_FLAG     = 1; // 开机标志位置1
                                    1-  364     	BANKSEL	_Sys_Flag0
     005E rrrr                      3-  109 m1      .banksel ram_address
     005F 18rr                      1-  365     	BSR	_Sys_Flag0,0
                                    1-  366     	.line	87, "Key.c"; 	if (!Low_Voltage_3P0_FLAG)
                                    1-  367     	BANKSEL	_Sys_Flag4
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 0Drr                      1-  368     	BTRSC	_Sys_Flag4,3
                                    1-  369     	MGOTO	_00001_DS_
     0062 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  370     	.line	89, "Key.c"; 	LED_On;
                                    1-  371     	BANKSEL	_PORTA
     0063 rrrr                      3-  109 m1      .banksel ram_address
     0064 1Drr                      1-  372     	BCR	_PORTA,2
     0065                           1-  373     _00001_DS_:
                                    1-  374     	.line	91, "Key.c"; 	RF_Control_On;
                                    1-  375     	BANKSEL	_PORTA
     0065 rrrr                      3-  109 m1      .banksel ram_address
     0066 1Frr                      1-  376     	BCR	_PORTA,7
                                    1-  377     	.line	92, "Key.c"; 	Power_On_Notice_FLAG = 1;
                                    1-  378     	BANKSEL	_Sys_Flag4
     0067 rrrr                      3-  109 m1      .banksel ram_address
     0068 1Arr                      1-  379     	BSR	_Sys_Flag4,4
                                    1-  380     	.line	93, "Key.c"; 	M1_Cnt               = 0;
                                    1-  381     	BANKSEL	_M1_Cnt
     0069 rrrr                      3-  109 m1      .banksel ram_address
     006A 02rr                      1-  382     	CLRR	_M1_Cnt
     006B 02rr                      1-  383     	CLRR	(_M1_Cnt + 1)
                                    1-  384     	.line	94, "Key.c"; 	StandBy_Mode();
                                    1-  385     	MCALL	_StandBy_Mode
     006C 2rrr                      3-   65 m1      LCALL rom_address
     006D                           1-  386     _02041_DS_:
                                    1-  387     	.line	97, "Key.c"; 	}
                                    1-  388     	RETURN	
     006D 0010                      3-   39 m1      ret
                                    1-  389     ; exit point of _Key_Scan
                                    1-  392     ;	code size estimation:
                                    1-  393     ;	   79+   31 =   110 instructions (  282 byte)
                                    1-  395     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/Key.s
002 ny8a054e.inc
003 common.inc
004 Key.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
SRAM / SFR   = 0x00000000 - 0x00000000
